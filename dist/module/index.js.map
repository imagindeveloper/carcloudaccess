{"version":3,"file":"index.js","sources":["../../node_modules/speakingurl/lib/speakingurl.js","../../node_modules/speakingurl/index.js","../../src/helpers.ts","../../src/createURL.ts","../../src/baseUrl.ts","../../src/getImage.ts","../../src/externalRequests.ts","../../src/autoloadImages.ts","../../src/getCarPaintSwatches.ts","../../src/getImageWrappers.ts","../../src/getListOfImages.ts","../../src/getListOfImagesWrappers.ts"],"sourcesContent":["(function (root) {\n    'use strict';\n\n    /**\n     * charMap\n     * @type {Object}\n     */\n    var charMap = {\n\n        // latin\n        'À': 'A',\n        'Á': 'A',\n        'Â': 'A',\n        'Ã': 'A',\n        'Ä': 'Ae',\n        'Å': 'A',\n        'Æ': 'AE',\n        'Ç': 'C',\n        'È': 'E',\n        'É': 'E',\n        'Ê': 'E',\n        'Ë': 'E',\n        'Ì': 'I',\n        'Í': 'I',\n        'Î': 'I',\n        'Ï': 'I',\n        'Ð': 'D',\n        'Ñ': 'N',\n        'Ò': 'O',\n        'Ó': 'O',\n        'Ô': 'O',\n        'Õ': 'O',\n        'Ö': 'Oe',\n        'Ő': 'O',\n        'Ø': 'O',\n        'Ù': 'U',\n        'Ú': 'U',\n        'Û': 'U',\n        'Ü': 'Ue',\n        'Ű': 'U',\n        'Ý': 'Y',\n        'Þ': 'TH',\n        'ß': 'ss',\n        'à': 'a',\n        'á': 'a',\n        'â': 'a',\n        'ã': 'a',\n        'ä': 'ae',\n        'å': 'a',\n        'æ': 'ae',\n        'ç': 'c',\n        'è': 'e',\n        'é': 'e',\n        'ê': 'e',\n        'ë': 'e',\n        'ì': 'i',\n        'í': 'i',\n        'î': 'i',\n        'ï': 'i',\n        'ð': 'd',\n        'ñ': 'n',\n        'ò': 'o',\n        'ó': 'o',\n        'ô': 'o',\n        'õ': 'o',\n        'ö': 'oe',\n        'ő': 'o',\n        'ø': 'o',\n        'ù': 'u',\n        'ú': 'u',\n        'û': 'u',\n        'ü': 'ue',\n        'ű': 'u',\n        'ý': 'y',\n        'þ': 'th',\n        'ÿ': 'y',\n        'ẞ': 'SS',\n\n        // language specific\n\n        // Arabic\n        'ا': 'a',\n        'أ': 'a',\n        'إ': 'i',\n        'آ': 'aa',\n        'ؤ': 'u',\n        'ئ': 'e',\n        'ء': 'a',\n        'ب': 'b',\n        'ت': 't',\n        'ث': 'th',\n        'ج': 'j',\n        'ح': 'h',\n        'خ': 'kh',\n        'د': 'd',\n        'ذ': 'th',\n        'ر': 'r',\n        'ز': 'z',\n        'س': 's',\n        'ش': 'sh',\n        'ص': 's',\n        'ض': 'dh',\n        'ط': 't',\n        'ظ': 'z',\n        'ع': 'a',\n        'غ': 'gh',\n        'ف': 'f',\n        'ق': 'q',\n        'ك': 'k',\n        'ل': 'l',\n        'م': 'm',\n        'ن': 'n',\n        'ه': 'h',\n        'و': 'w',\n        'ي': 'y',\n        'ى': 'a',\n        'ة': 'h',\n        'ﻻ': 'la',\n        'ﻷ': 'laa',\n        'ﻹ': 'lai',\n        'ﻵ': 'laa',\n\n        // Persian additional characters than Arabic\n        'گ': 'g',\n        'چ': 'ch',\n        'پ': 'p',\n        'ژ': 'zh',\n        'ک': 'k',\n        'ی': 'y',\n\n        // Arabic diactrics\n        'َ': 'a',\n        'ً': 'an',\n        'ِ': 'e',\n        'ٍ': 'en',\n        'ُ': 'u',\n        'ٌ': 'on',\n        'ْ': '',\n\n        // Arabic numbers\n        '٠': '0',\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n\n        // Persian numbers\n        '۰': '0',\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n\n        // Burmese consonants\n        'က': 'k',\n        'ခ': 'kh',\n        'ဂ': 'g',\n        'ဃ': 'ga',\n        'င': 'ng',\n        'စ': 's',\n        'ဆ': 'sa',\n        'ဇ': 'z',\n        'စျ': 'za',\n        'ည': 'ny',\n        'ဋ': 't',\n        'ဌ': 'ta',\n        'ဍ': 'd',\n        'ဎ': 'da',\n        'ဏ': 'na',\n        'တ': 't',\n        'ထ': 'ta',\n        'ဒ': 'd',\n        'ဓ': 'da',\n        'န': 'n',\n        'ပ': 'p',\n        'ဖ': 'pa',\n        'ဗ': 'b',\n        'ဘ': 'ba',\n        'မ': 'm',\n        'ယ': 'y',\n        'ရ': 'ya',\n        'လ': 'l',\n        'ဝ': 'w',\n        'သ': 'th',\n        'ဟ': 'h',\n        'ဠ': 'la',\n        'အ': 'a',\n        // consonant character combos\n        'ြ': 'y',\n        'ျ': 'ya',\n        'ွ': 'w',\n        'ြွ': 'yw',\n        'ျွ': 'ywa',\n        'ှ': 'h',\n        // independent vowels\n        'ဧ': 'e',\n        '၏': '-e',\n        'ဣ': 'i',\n        'ဤ': '-i',\n        'ဉ': 'u',\n        'ဦ': '-u',\n        'ဩ': 'aw',\n        'သြော': 'aw',\n        'ဪ': 'aw',\n        // numbers\n        '၀': '0',\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        // virama and tone marks which are silent in transliteration\n        '္': '',\n        '့': '',\n        'း': '',\n\n        // Czech\n        'č': 'c',\n        'ď': 'd',\n        'ě': 'e',\n        'ň': 'n',\n        'ř': 'r',\n        'š': 's',\n        'ť': 't',\n        'ů': 'u',\n        'ž': 'z',\n        'Č': 'C',\n        'Ď': 'D',\n        'Ě': 'E',\n        'Ň': 'N',\n        'Ř': 'R',\n        'Š': 'S',\n        'Ť': 'T',\n        'Ů': 'U',\n        'Ž': 'Z',\n\n        // Dhivehi\n        'ހ': 'h',\n        'ށ': 'sh',\n        'ނ': 'n',\n        'ރ': 'r',\n        'ބ': 'b',\n        'ޅ': 'lh',\n        'ކ': 'k',\n        'އ': 'a',\n        'ވ': 'v',\n        'މ': 'm',\n        'ފ': 'f',\n        'ދ': 'dh',\n        'ތ': 'th',\n        'ލ': 'l',\n        'ގ': 'g',\n        'ޏ': 'gn',\n        'ސ': 's',\n        'ޑ': 'd',\n        'ޒ': 'z',\n        'ޓ': 't',\n        'ޔ': 'y',\n        'ޕ': 'p',\n        'ޖ': 'j',\n        'ޗ': 'ch',\n        'ޘ': 'tt',\n        'ޙ': 'hh',\n        'ޚ': 'kh',\n        'ޛ': 'th',\n        'ޜ': 'z',\n        'ޝ': 'sh',\n        'ޞ': 's',\n        'ޟ': 'd',\n        'ޠ': 't',\n        'ޡ': 'z',\n        'ޢ': 'a',\n        'ޣ': 'gh',\n        'ޤ': 'q',\n        'ޥ': 'w',\n        'ަ': 'a',\n        'ާ': 'aa',\n        'ި': 'i',\n        'ީ': 'ee',\n        'ު': 'u',\n        'ޫ': 'oo',\n        'ެ': 'e',\n        'ޭ': 'ey',\n        'ޮ': 'o',\n        'ޯ': 'oa',\n        'ް': '',\n\n        // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\n        // National system (2002)\n        'ა': 'a',\n        'ბ': 'b',\n        'გ': 'g',\n        'დ': 'd',\n        'ე': 'e',\n        'ვ': 'v',\n        'ზ': 'z',\n        'თ': 't',\n        'ი': 'i',\n        'კ': 'k',\n        'ლ': 'l',\n        'მ': 'm',\n        'ნ': 'n',\n        'ო': 'o',\n        'პ': 'p',\n        'ჟ': 'zh',\n        'რ': 'r',\n        'ს': 's',\n        'ტ': 't',\n        'უ': 'u',\n        'ფ': 'p',\n        'ქ': 'k',\n        'ღ': 'gh',\n        'ყ': 'q',\n        'შ': 'sh',\n        'ჩ': 'ch',\n        'ც': 'ts',\n        'ძ': 'dz',\n        'წ': 'ts',\n        'ჭ': 'ch',\n        'ხ': 'kh',\n        'ჯ': 'j',\n        'ჰ': 'h',\n\n        // Greek\n        'α': 'a',\n        'β': 'v',\n        'γ': 'g',\n        'δ': 'd',\n        'ε': 'e',\n        'ζ': 'z',\n        'η': 'i',\n        'θ': 'th',\n        'ι': 'i',\n        'κ': 'k',\n        'λ': 'l',\n        'μ': 'm',\n        'ν': 'n',\n        'ξ': 'ks',\n        'ο': 'o',\n        'π': 'p',\n        'ρ': 'r',\n        'σ': 's',\n        'τ': 't',\n        'υ': 'y',\n        'φ': 'f',\n        'χ': 'x',\n        'ψ': 'ps',\n        'ω': 'o',\n        'ά': 'a',\n        'έ': 'e',\n        'ί': 'i',\n        'ό': 'o',\n        'ύ': 'y',\n        'ή': 'i',\n        'ώ': 'o',\n        'ς': 's',\n        'ϊ': 'i',\n        'ΰ': 'y',\n        'ϋ': 'y',\n        'ΐ': 'i',\n        'Α': 'A',\n        'Β': 'B',\n        'Γ': 'G',\n        'Δ': 'D',\n        'Ε': 'E',\n        'Ζ': 'Z',\n        'Η': 'I',\n        'Θ': 'TH',\n        'Ι': 'I',\n        'Κ': 'K',\n        'Λ': 'L',\n        'Μ': 'M',\n        'Ν': 'N',\n        'Ξ': 'KS',\n        'Ο': 'O',\n        'Π': 'P',\n        'Ρ': 'R',\n        'Σ': 'S',\n        'Τ': 'T',\n        'Υ': 'Y',\n        'Φ': 'F',\n        'Χ': 'X',\n        'Ψ': 'PS',\n        'Ω': 'O',\n        'Ά': 'A',\n        'Έ': 'E',\n        'Ί': 'I',\n        'Ό': 'O',\n        'Ύ': 'Y',\n        'Ή': 'I',\n        'Ώ': 'O',\n        'Ϊ': 'I',\n        'Ϋ': 'Y',\n\n        // Latvian\n        'ā': 'a',\n        // 'č': 'c', // duplicate\n        'ē': 'e',\n        'ģ': 'g',\n        'ī': 'i',\n        'ķ': 'k',\n        'ļ': 'l',\n        'ņ': 'n',\n        // 'š': 's', // duplicate\n        'ū': 'u',\n        // 'ž': 'z', // duplicate\n        'Ā': 'A',\n        // 'Č': 'C', // duplicate\n        'Ē': 'E',\n        'Ģ': 'G',\n        'Ī': 'I',\n        'Ķ': 'k',\n        'Ļ': 'L',\n        'Ņ': 'N',\n        // 'Š': 'S', // duplicate\n        'Ū': 'U',\n        // 'Ž': 'Z', // duplicate\n\n        // Macedonian\n        'Ќ': 'Kj',\n        'ќ': 'kj',\n        'Љ': 'Lj',\n        'љ': 'lj',\n        'Њ': 'Nj',\n        'њ': 'nj',\n        'Тс': 'Ts',\n        'тс': 'ts',\n\n        // Polish\n        'ą': 'a',\n        'ć': 'c',\n        'ę': 'e',\n        'ł': 'l',\n        'ń': 'n',\n        // 'ó': 'o', // duplicate\n        'ś': 's',\n        'ź': 'z',\n        'ż': 'z',\n        'Ą': 'A',\n        'Ć': 'C',\n        'Ę': 'E',\n        'Ł': 'L',\n        'Ń': 'N',\n        'Ś': 'S',\n        'Ź': 'Z',\n        'Ż': 'Z',\n\n        // Ukranian\n        'Є': 'Ye',\n        'І': 'I',\n        'Ї': 'Yi',\n        'Ґ': 'G',\n        'є': 'ye',\n        'і': 'i',\n        'ї': 'yi',\n        'ґ': 'g',\n\n        // Romanian\n        'ă': 'a',\n        'Ă': 'A',\n        'ș': 's',\n        'Ș': 'S',\n        // 'ş': 's', // duplicate\n        // 'Ş': 'S', // duplicate\n        'ț': 't',\n        'Ț': 'T',\n        'ţ': 't',\n        'Ţ': 'T',\n\n        // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\n        // ICAO\n\n        'а': 'a',\n        'б': 'b',\n        'в': 'v',\n        'г': 'g',\n        'д': 'd',\n        'е': 'e',\n        'ё': 'yo',\n        'ж': 'zh',\n        'з': 'z',\n        'и': 'i',\n        'й': 'i',\n        'к': 'k',\n        'л': 'l',\n        'м': 'm',\n        'н': 'n',\n        'о': 'o',\n        'п': 'p',\n        'р': 'r',\n        'с': 's',\n        'т': 't',\n        'у': 'u',\n        'ф': 'f',\n        'х': 'kh',\n        'ц': 'c',\n        'ч': 'ch',\n        'ш': 'sh',\n        'щ': 'sh',\n        'ъ': '',\n        'ы': 'y',\n        'ь': '',\n        'э': 'e',\n        'ю': 'yu',\n        'я': 'ya',\n        'А': 'A',\n        'Б': 'B',\n        'В': 'V',\n        'Г': 'G',\n        'Д': 'D',\n        'Е': 'E',\n        'Ё': 'Yo',\n        'Ж': 'Zh',\n        'З': 'Z',\n        'И': 'I',\n        'Й': 'I',\n        'К': 'K',\n        'Л': 'L',\n        'М': 'M',\n        'Н': 'N',\n        'О': 'O',\n        'П': 'P',\n        'Р': 'R',\n        'С': 'S',\n        'Т': 'T',\n        'У': 'U',\n        'Ф': 'F',\n        'Х': 'Kh',\n        'Ц': 'C',\n        'Ч': 'Ch',\n        'Ш': 'Sh',\n        'Щ': 'Sh',\n        'Ъ': '',\n        'Ы': 'Y',\n        'Ь': '',\n        'Э': 'E',\n        'Ю': 'Yu',\n        'Я': 'Ya',\n\n        // Serbian\n        'ђ': 'dj',\n        'ј': 'j',\n        // 'љ': 'lj',  // duplicate\n        // 'њ': 'nj', // duplicate\n        'ћ': 'c',\n        'џ': 'dz',\n        'Ђ': 'Dj',\n        'Ј': 'j',\n        // 'Љ': 'Lj', // duplicate\n        // 'Њ': 'Nj', // duplicate\n        'Ћ': 'C',\n        'Џ': 'Dz',\n\n        // Slovak\n        'ľ': 'l',\n        'ĺ': 'l',\n        'ŕ': 'r',\n        'Ľ': 'L',\n        'Ĺ': 'L',\n        'Ŕ': 'R',\n\n        // Turkish\n        'ş': 's',\n        'Ş': 'S',\n        'ı': 'i',\n        'İ': 'I',\n        // 'ç': 'c', // duplicate\n        // 'Ç': 'C', // duplicate\n        // 'ü': 'u', // duplicate, see langCharMap\n        // 'Ü': 'U', // duplicate, see langCharMap\n        // 'ö': 'o', // duplicate, see langCharMap\n        // 'Ö': 'O', // duplicate, see langCharMap\n        'ğ': 'g',\n        'Ğ': 'G',\n\n        // Vietnamese\n        'ả': 'a',\n        'Ả': 'A',\n        'ẳ': 'a',\n        'Ẳ': 'A',\n        'ẩ': 'a',\n        'Ẩ': 'A',\n        'đ': 'd',\n        'Đ': 'D',\n        'ẹ': 'e',\n        'Ẹ': 'E',\n        'ẽ': 'e',\n        'Ẽ': 'E',\n        'ẻ': 'e',\n        'Ẻ': 'E',\n        'ế': 'e',\n        'Ế': 'E',\n        'ề': 'e',\n        'Ề': 'E',\n        'ệ': 'e',\n        'Ệ': 'E',\n        'ễ': 'e',\n        'Ễ': 'E',\n        'ể': 'e',\n        'Ể': 'E',\n        'ỏ': 'o',\n        'ọ': 'o',\n        'Ọ': 'o',\n        'ố': 'o',\n        'Ố': 'O',\n        'ồ': 'o',\n        'Ồ': 'O',\n        'ổ': 'o',\n        'Ổ': 'O',\n        'ộ': 'o',\n        'Ộ': 'O',\n        'ỗ': 'o',\n        'Ỗ': 'O',\n        'ơ': 'o',\n        'Ơ': 'O',\n        'ớ': 'o',\n        'Ớ': 'O',\n        'ờ': 'o',\n        'Ờ': 'O',\n        'ợ': 'o',\n        'Ợ': 'O',\n        'ỡ': 'o',\n        'Ỡ': 'O',\n        'Ở': 'o',\n        'ở': 'o',\n        'ị': 'i',\n        'Ị': 'I',\n        'ĩ': 'i',\n        'Ĩ': 'I',\n        'ỉ': 'i',\n        'Ỉ': 'i',\n        'ủ': 'u',\n        'Ủ': 'U',\n        'ụ': 'u',\n        'Ụ': 'U',\n        'ũ': 'u',\n        'Ũ': 'U',\n        'ư': 'u',\n        'Ư': 'U',\n        'ứ': 'u',\n        'Ứ': 'U',\n        'ừ': 'u',\n        'Ừ': 'U',\n        'ự': 'u',\n        'Ự': 'U',\n        'ữ': 'u',\n        'Ữ': 'U',\n        'ử': 'u',\n        'Ử': 'ư',\n        'ỷ': 'y',\n        'Ỷ': 'y',\n        'ỳ': 'y',\n        'Ỳ': 'Y',\n        'ỵ': 'y',\n        'Ỵ': 'Y',\n        'ỹ': 'y',\n        'Ỹ': 'Y',\n        'ạ': 'a',\n        'Ạ': 'A',\n        'ấ': 'a',\n        'Ấ': 'A',\n        'ầ': 'a',\n        'Ầ': 'A',\n        'ậ': 'a',\n        'Ậ': 'A',\n        'ẫ': 'a',\n        'Ẫ': 'A',\n        // 'ă': 'a', // duplicate\n        // 'Ă': 'A', // duplicate\n        'ắ': 'a',\n        'Ắ': 'A',\n        'ằ': 'a',\n        'Ằ': 'A',\n        'ặ': 'a',\n        'Ặ': 'A',\n        'ẵ': 'a',\n        'Ẵ': 'A',\n        \"⓪\": \"0\",\n        \"①\": \"1\",\n        \"②\": \"2\",\n        \"③\": \"3\",\n        \"④\": \"4\",\n        \"⑤\": \"5\",\n        \"⑥\": \"6\",\n        \"⑦\": \"7\",\n        \"⑧\": \"8\",\n        \"⑨\": \"9\",\n        \"⑩\": \"10\",\n        \"⑪\": \"11\",\n        \"⑫\": \"12\",\n        \"⑬\": \"13\",\n        \"⑭\": \"14\",\n        \"⑮\": \"15\",\n        \"⑯\": \"16\",\n        \"⑰\": \"17\",\n        \"⑱\": \"18\",\n        \"⑲\": \"18\",\n        \"⑳\": \"18\",\n\n        \"⓵\": \"1\",\n        \"⓶\": \"2\",\n        \"⓷\": \"3\",\n        \"⓸\": \"4\",\n        \"⓹\": \"5\",\n        \"⓺\": \"6\",\n        \"⓻\": \"7\",\n        \"⓼\": \"8\",\n        \"⓽\": \"9\",\n        \"⓾\": \"10\",\n\n        \"⓿\": \"0\",\n        \"⓫\": \"11\",\n        \"⓬\": \"12\",\n        \"⓭\": \"13\",\n        \"⓮\": \"14\",\n        \"⓯\": \"15\",\n        \"⓰\": \"16\",\n        \"⓱\": \"17\",\n        \"⓲\": \"18\",\n        \"⓳\": \"19\",\n        \"⓴\": \"20\",\n\n        \"Ⓐ\": \"A\",\n        \"Ⓑ\": \"B\",\n        \"Ⓒ\": \"C\",\n        \"Ⓓ\": \"D\",\n        \"Ⓔ\": \"E\",\n        \"Ⓕ\": \"F\",\n        \"Ⓖ\": \"G\",\n        \"Ⓗ\": \"H\",\n        \"Ⓘ\": \"I\",\n        \"Ⓙ\": \"J\",\n        \"Ⓚ\": \"K\",\n        \"Ⓛ\": \"L\",\n        \"Ⓜ\": \"M\",\n        \"Ⓝ\": \"N\",\n        \"Ⓞ\": \"O\",\n        \"Ⓟ\": \"P\",\n        \"Ⓠ\": \"Q\",\n        \"Ⓡ\": \"R\",\n        \"Ⓢ\": \"S\",\n        \"Ⓣ\": \"T\",\n        \"Ⓤ\": \"U\",\n        \"Ⓥ\": \"V\",\n        \"Ⓦ\": \"W\",\n        \"Ⓧ\": \"X\",\n        \"Ⓨ\": \"Y\",\n        \"Ⓩ\": \"Z\",\n\n        \"ⓐ\": \"a\",\n        \"ⓑ\": \"b\",\n        \"ⓒ\": \"c\",\n        \"ⓓ\": \"d\",\n        \"ⓔ\": \"e\",\n        \"ⓕ\": \"f\",\n        \"ⓖ\": \"g\",\n        \"ⓗ\": \"h\",\n        \"ⓘ\": \"i\",\n        \"ⓙ\": \"j\",\n        \"ⓚ\": \"k\",\n        \"ⓛ\": \"l\",\n        \"ⓜ\": \"m\",\n        \"ⓝ\": \"n\",\n        \"ⓞ\": \"o\",\n        \"ⓟ\": \"p\",\n        \"ⓠ\": \"q\",\n        \"ⓡ\": \"r\",\n        \"ⓢ\": \"s\",\n        \"ⓣ\": \"t\",\n        \"ⓤ\": \"u\",\n        \"ⓦ\": \"v\",\n        \"ⓥ\": \"w\",\n        \"ⓧ\": \"x\",\n        \"ⓨ\": \"y\",\n        \"ⓩ\": \"z\",\n\n        // symbols\n        '“': '\"',\n        '”': '\"',\n        '‘': \"'\",\n        '’': \"'\",\n        '∂': 'd',\n        'ƒ': 'f',\n        '™': '(TM)',\n        '©': '(C)',\n        'œ': 'oe',\n        'Œ': 'OE',\n        '®': '(R)',\n        '†': '+',\n        '℠': '(SM)',\n        '…': '...',\n        '˚': 'o',\n        'º': 'o',\n        'ª': 'a',\n        '•': '*',\n        '၊': ',',\n        '။': '.',\n\n        // currency\n        '$': 'USD',\n        '€': 'EUR',\n        '₢': 'BRN',\n        '₣': 'FRF',\n        '£': 'GBP',\n        '₤': 'ITL',\n        '₦': 'NGN',\n        '₧': 'ESP',\n        '₩': 'KRW',\n        '₪': 'ILS',\n        '₫': 'VND',\n        '₭': 'LAK',\n        '₮': 'MNT',\n        '₯': 'GRD',\n        '₱': 'ARS',\n        '₲': 'PYG',\n        '₳': 'ARA',\n        '₴': 'UAH',\n        '₵': 'GHS',\n        '¢': 'cent',\n        '¥': 'CNY',\n        '元': 'CNY',\n        '円': 'YEN',\n        '﷼': 'IRR',\n        '₠': 'EWE',\n        '฿': 'THB',\n        '₨': 'INR',\n        '₹': 'INR',\n        '₰': 'PF',\n        '₺': 'TRY',\n        '؋': 'AFN',\n        '₼': 'AZN',\n        'лв': 'BGN',\n        '៛': 'KHR',\n        '₡': 'CRC',\n        '₸': 'KZT',\n        'ден': 'MKD',\n        'zł': 'PLN',\n        '₽': 'RUB',\n        '₾': 'GEL'\n\n    };\n\n    /**\n     * special look ahead character array\n     * These characters form with consonants to become 'single'/consonant combo\n     * @type [Array]\n     */\n    var lookAheadCharArray = [\n        // burmese\n        '်',\n\n        // Dhivehi\n        'ް'\n    ];\n\n    /**\n     * diatricMap for languages where transliteration changes entirely as more diatrics are added\n     * @type {Object}\n     */\n    var diatricMap = {\n        // Burmese\n        // dependent vowels\n        'ာ': 'a',\n        'ါ': 'a',\n        'ေ': 'e',\n        'ဲ': 'e',\n        'ိ': 'i',\n        'ီ': 'i',\n        'ို': 'o',\n        'ု': 'u',\n        'ူ': 'u',\n        'ေါင်': 'aung',\n        'ော': 'aw',\n        'ော်': 'aw',\n        'ေါ': 'aw',\n        'ေါ်': 'aw',\n        '်': '်', // this is special case but the character will be converted to latin in the code\n        'က်': 'et',\n        'ိုက်': 'aik',\n        'ောက်': 'auk',\n        'င်': 'in',\n        'ိုင်': 'aing',\n        'ောင်': 'aung',\n        'စ်': 'it',\n        'ည်': 'i',\n        'တ်': 'at',\n        'ိတ်': 'eik',\n        'ုတ်': 'ok',\n        'ွတ်': 'ut',\n        'ေတ်': 'it',\n        'ဒ်': 'd',\n        'ိုဒ်': 'ok',\n        'ုဒ်': 'ait',\n        'န်': 'an',\n        'ာန်': 'an',\n        'ိန်': 'ein',\n        'ုန်': 'on',\n        'ွန်': 'un',\n        'ပ်': 'at',\n        'ိပ်': 'eik',\n        'ုပ်': 'ok',\n        'ွပ်': 'ut',\n        'န်ုပ်': 'nub',\n        'မ်': 'an',\n        'ိမ်': 'ein',\n        'ုမ်': 'on',\n        'ွမ်': 'un',\n        'ယ်': 'e',\n        'ိုလ်': 'ol',\n        'ဉ်': 'in',\n        'ံ': 'an',\n        'ိံ': 'ein',\n        'ုံ': 'on',\n\n        // Dhivehi\n        'ައް': 'ah',\n        'ަށް': 'ah'\n    };\n\n    /**\n     * langCharMap language specific characters translations\n     * @type   {Object}\n     */\n    var langCharMap = {\n        'en': {}, // default language\n\n        'az': { // Azerbaijani\n            'ç': 'c',\n            'ə': 'e',\n            'ğ': 'g',\n            'ı': 'i',\n            'ö': 'o',\n            'ş': 's',\n            'ü': 'u',\n            'Ç': 'C',\n            'Ə': 'E',\n            'Ğ': 'G',\n            'İ': 'I',\n            'Ö': 'O',\n            'Ş': 'S',\n            'Ü': 'U'\n        },\n\n        'cs': { // Czech\n            'č': 'c',\n            'ď': 'd',\n            'ě': 'e',\n            'ň': 'n',\n            'ř': 'r',\n            'š': 's',\n            'ť': 't',\n            'ů': 'u',\n            'ž': 'z',\n            'Č': 'C',\n            'Ď': 'D',\n            'Ě': 'E',\n            'Ň': 'N',\n            'Ř': 'R',\n            'Š': 'S',\n            'Ť': 'T',\n            'Ů': 'U',\n            'Ž': 'Z'\n        },\n\n        'fi': { // Finnish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'hu': { // Hungarian\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            // 'á': 'a', duplicate see charMap/latin\n            // 'Á': 'A', duplicate see charMap/latin\n            'ö': 'o', // ok\n            'Ö': 'O', // ok\n            // 'ő': 'o', duplicate see charMap/latin\n            // 'Ő': 'O', duplicate see charMap/latin\n            'ü': 'u',\n            'Ü': 'U',\n            'ű': 'u',\n            'Ű': 'U'\n        },\n\n        'lt': { // Lithuanian\n            'ą': 'a',\n            'č': 'c',\n            'ę': 'e',\n            'ė': 'e',\n            'į': 'i',\n            'š': 's',\n            'ų': 'u',\n            'ū': 'u',\n            'ž': 'z',\n            'Ą': 'A',\n            'Č': 'C',\n            'Ę': 'E',\n            'Ė': 'E',\n            'Į': 'I',\n            'Š': 'S',\n            'Ų': 'U',\n            'Ū': 'U'\n        },\n\n        'lv': { // Latvian\n            'ā': 'a',\n            'č': 'c',\n            'ē': 'e',\n            'ģ': 'g',\n            'ī': 'i',\n            'ķ': 'k',\n            'ļ': 'l',\n            'ņ': 'n',\n            'š': 's',\n            'ū': 'u',\n            'ž': 'z',\n            'Ā': 'A',\n            'Č': 'C',\n            'Ē': 'E',\n            'Ģ': 'G',\n            'Ī': 'i',\n            'Ķ': 'k',\n            'Ļ': 'L',\n            'Ņ': 'N',\n            'Š': 'S',\n            'Ū': 'u',\n            'Ž': 'Z'\n        },\n\n        'pl': { // Polish\n            'ą': 'a',\n            'ć': 'c',\n            'ę': 'e',\n            'ł': 'l',\n            'ń': 'n',\n            'ó': 'o',\n            'ś': 's',\n            'ź': 'z',\n            'ż': 'z',\n            'Ą': 'A',\n            'Ć': 'C',\n            'Ę': 'e',\n            'Ł': 'L',\n            'Ń': 'N',\n            'Ó': 'O',\n            'Ś': 'S',\n            'Ź': 'Z',\n            'Ż': 'Z'\n        },\n\n        'sv': { // Swedish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'sk': { // Slovak\n            'ä': 'a',\n            'Ä': 'A'\n        },\n\n        'sr': { // Serbian\n            'љ': 'lj',\n            'њ': 'nj',\n            'Љ': 'Lj',\n            'Њ': 'Nj',\n            'đ': 'dj',\n            'Đ': 'Dj'\n        },\n\n        'tr': { // Turkish\n            'Ü': 'U',\n            'Ö': 'O',\n            'ü': 'u',\n            'ö': 'o'\n        }\n    };\n\n    /**\n     * symbolMap language specific symbol translations\n     * translations must be transliterated already\n     * @type   {Object}\n     */\n    var symbolMap = {\n        'ar': {\n            '∆': 'delta',\n            '∞': 'la-nihaya',\n            '♥': 'hob',\n            '&': 'wa',\n            '|': 'aw',\n            '<': 'aqal-men',\n            '>': 'akbar-men',\n            '∑': 'majmou',\n            '¤': 'omla'\n        },\n\n        'az': {},\n\n        'ca': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'amor',\n            '&': 'i',\n            '|': 'o',\n            '<': 'menys que',\n            '>': 'mes que',\n            '∑': 'suma dels',\n            '¤': 'moneda'\n        },\n\n        'cs': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'nebo',\n            '<': 'mensi nez',\n            '>': 'vetsi nez',\n            '∑': 'soucet',\n            '¤': 'mena'\n        },\n\n        'de': {\n            '∆': 'delta',\n            '∞': 'unendlich',\n            '♥': 'Liebe',\n            '&': 'und',\n            '|': 'oder',\n            '<': 'kleiner als',\n            '>': 'groesser als',\n            '∑': 'Summe von',\n            '¤': 'Waehrung'\n        },\n\n        'dv': {\n            '∆': 'delta',\n            '∞': 'kolunulaa',\n            '♥': 'loabi',\n            '&': 'aai',\n            '|': 'noonee',\n            '<': 'ah vure kuda',\n            '>': 'ah vure bodu',\n            '∑': 'jumula',\n            '¤': 'faisaa'\n        },\n\n        'en': {\n            '∆': 'delta',\n            '∞': 'infinity',\n            '♥': 'love',\n            '&': 'and',\n            '|': 'or',\n            '<': 'less than',\n            '>': 'greater than',\n            '∑': 'sum',\n            '¤': 'currency'\n        },\n\n        'es': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'y',\n            '|': 'u',\n            '<': 'menos que',\n            '>': 'mas que',\n            '∑': 'suma de los',\n            '¤': 'moneda'\n        },\n\n        'fa': {\n            '∆': 'delta',\n            '∞': 'bi-nahayat',\n            '♥': 'eshgh',\n            '&': 'va',\n            '|': 'ya',\n            '<': 'kamtar-az',\n            '>': 'bishtar-az',\n            '∑': 'majmooe',\n            '¤': 'vahed'\n        },\n\n        'fi': {\n            '∆': 'delta',\n            '∞': 'aarettomyys',\n            '♥': 'rakkaus',\n            '&': 'ja',\n            '|': 'tai',\n            '<': 'pienempi kuin',\n            '>': 'suurempi kuin',\n            '∑': 'summa',\n            '¤': 'valuutta'\n        },\n\n        'fr': {\n            '∆': 'delta',\n            '∞': 'infiniment',\n            '♥': 'Amour',\n            '&': 'et',\n            '|': 'ou',\n            '<': 'moins que',\n            '>': 'superieure a',\n            '∑': 'somme des',\n            '¤': 'monnaie'\n        },\n\n        'ge': {\n            '∆': 'delta',\n            '∞': 'usasruloba',\n            '♥': 'siqvaruli',\n            '&': 'da',\n            '|': 'an',\n            '<': 'naklebi',\n            '>': 'meti',\n            '∑': 'jami',\n            '¤': 'valuta'\n        },\n\n        'gr': {},\n\n        'hu': {\n            '∆': 'delta',\n            '∞': 'vegtelen',\n            '♥': 'szerelem',\n            '&': 'es',\n            '|': 'vagy',\n            '<': 'kisebb mint',\n            '>': 'nagyobb mint',\n            '∑': 'szumma',\n            '¤': 'penznem'\n        },\n\n        'it': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amore',\n            '&': 'e',\n            '|': 'o',\n            '<': 'minore di',\n            '>': 'maggiore di',\n            '∑': 'somma',\n            '¤': 'moneta'\n        },\n\n        'lt': {\n            '∆': 'delta',\n            '∞': 'begalybe',\n            '♥': 'meile',\n            '&': 'ir',\n            '|': 'ar',\n            '<': 'maziau nei',\n            '>': 'daugiau nei',\n            '∑': 'suma',\n            '¤': 'valiuta'\n        },\n\n        'lv': {\n            '∆': 'delta',\n            '∞': 'bezgaliba',\n            '♥': 'milestiba',\n            '&': 'un',\n            '|': 'vai',\n            '<': 'mazak neka',\n            '>': 'lielaks neka',\n            '∑': 'summa',\n            '¤': 'valuta'\n        },\n\n        'my': {\n            '∆': 'kwahkhyaet',\n            '∞': 'asaonasme',\n            '♥': 'akhyait',\n            '&': 'nhin',\n            '|': 'tho',\n            '<': 'ngethaw',\n            '>': 'kyithaw',\n            '∑': 'paungld',\n            '¤': 'ngwekye'\n        },\n\n        'mk': {},\n\n        'nl': {\n            '∆': 'delta',\n            '∞': 'oneindig',\n            '♥': 'liefde',\n            '&': 'en',\n            '|': 'of',\n            '<': 'kleiner dan',\n            '>': 'groter dan',\n            '∑': 'som',\n            '¤': 'valuta'\n        },\n\n        'pl': {\n            '∆': 'delta',\n            '∞': 'nieskonczonosc',\n            '♥': 'milosc',\n            '&': 'i',\n            '|': 'lub',\n            '<': 'mniejsze niz',\n            '>': 'wieksze niz',\n            '∑': 'suma',\n            '¤': 'waluta'\n        },\n\n        'pt': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'e',\n            '|': 'ou',\n            '<': 'menor que',\n            '>': 'maior que',\n            '∑': 'soma',\n            '¤': 'moeda'\n        },\n\n        'ro': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'dragoste',\n            '&': 'si',\n            '|': 'sau',\n            '<': 'mai mic ca',\n            '>': 'mai mare ca',\n            '∑': 'suma',\n            '¤': 'valuta'\n        },\n\n        'ru': {\n            '∆': 'delta',\n            '∞': 'beskonechno',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'ili',\n            '<': 'menshe',\n            '>': 'bolshe',\n            '∑': 'summa',\n            '¤': 'valjuta'\n        },\n\n        'sk': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'alebo',\n            '<': 'menej ako',\n            '>': 'viac ako',\n            '∑': 'sucet',\n            '¤': 'mena'\n        },\n\n        'sr': {},\n\n        'tr': {\n            '∆': 'delta',\n            '∞': 'sonsuzluk',\n            '♥': 'ask',\n            '&': 've',\n            '|': 'veya',\n            '<': 'kucuktur',\n            '>': 'buyuktur',\n            '∑': 'toplam',\n            '¤': 'para birimi'\n        },\n\n        'uk': {\n            '∆': 'delta',\n            '∞': 'bezkinechnist',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'abo',\n            '<': 'menshe',\n            '>': 'bilshe',\n            '∑': 'suma',\n            '¤': 'valjuta'\n        },\n\n        'vn': {\n            '∆': 'delta',\n            '∞': 'vo cuc',\n            '♥': 'yeu',\n            '&': 'va',\n            '|': 'hoac',\n            '<': 'nho hon',\n            '>': 'lon hon',\n            '∑': 'tong',\n            '¤': 'tien te'\n        }\n    };\n\n    var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\n\n    var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\n\n    var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\n\n    /**\n     * getSlug\n     * @param  {string} input input string\n     * @param  {object|string} opts config object or separator string/char\n     * @api    public\n     * @return {string}  sluggified string\n     */\n    var getSlug = function getSlug(input, opts) {\n        var separator = '-';\n        var result = '';\n        var diatricString = '';\n        var convertSymbols = true;\n        var customReplacements = {};\n        var maintainCase;\n        var titleCase;\n        var truncate;\n        var uricFlag;\n        var uricNoSlashFlag;\n        var markFlag;\n        var symbol;\n        var langChar;\n        var lucky;\n        var i;\n        var ch;\n        var l;\n        var lastCharWasSymbol;\n        var lastCharWasDiatric;\n        var allowedChars = '';\n\n        if (typeof input !== 'string') {\n            return '';\n        }\n\n        if (typeof opts === 'string') {\n            separator = opts;\n        }\n\n        symbol = symbolMap.en;\n        langChar = langCharMap.en;\n\n        if (typeof opts === 'object') {\n            maintainCase = opts.maintainCase || false;\n            customReplacements = (opts.custom && typeof opts.custom === 'object') ? opts.custom : customReplacements;\n            truncate = (+opts.truncate > 1 && opts.truncate) || false;\n            uricFlag = opts.uric || false;\n            uricNoSlashFlag = opts.uricNoSlash || false;\n            markFlag = opts.mark || false;\n            convertSymbols = (opts.symbols === false || opts.lang === false) ? false : true;\n            separator = opts.separator || separator;\n\n            if (uricFlag) {\n                allowedChars += uricChars;\n            }\n\n            if (uricNoSlashFlag) {\n                allowedChars += uricNoSlashChars;\n            }\n\n            if (markFlag) {\n                allowedChars += markChars;\n            }\n\n            symbol = (opts.lang && symbolMap[opts.lang] && convertSymbols) ?\n                symbolMap[opts.lang] : (convertSymbols ? symbolMap.en : {});\n\n            langChar = (opts.lang && langCharMap[opts.lang]) ?\n                langCharMap[opts.lang] :\n                opts.lang === false || opts.lang === true ? {} : langCharMap.en;\n\n            // if titleCase config is an Array, rewrite to object format\n            if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\n                opts.titleCase.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n\n                titleCase = true;\n            } else {\n                titleCase = !!opts.titleCase;\n            }\n\n            // if custom config is an Array, rewrite to object format\n            if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\n                opts.custom.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n            }\n\n            // custom replacements\n            Object.keys(customReplacements).forEach(function (v) {\n                var r;\n\n                if (v.length > 1) {\n                    r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\n                } else {\n                    r = new RegExp(escapeChars(v), 'gi');\n                }\n\n                input = input.replace(r, customReplacements[v]);\n            });\n\n            // add all custom replacement to allowed charlist\n            for (ch in customReplacements) {\n                allowedChars += ch;\n            }\n        }\n\n        allowedChars += separator;\n\n        // escape all necessary chars\n        allowedChars = escapeChars(allowedChars);\n\n        // trim whitespaces\n        input = input.replace(/(^\\s+|\\s+$)/g, '');\n\n        lastCharWasSymbol = false;\n        lastCharWasDiatric = false;\n\n        for (i = 0, l = input.length; i < l; i++) {\n            ch = input[i];\n\n            if (isReplacedCustomChar(ch, customReplacements)) {\n                // don't convert a already converted char\n                lastCharWasSymbol = false;\n            } else if (langChar[ch]) {\n                // process language specific diactrics chars conversion\n                ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\n\n                lastCharWasSymbol = false;\n            } else if (ch in charMap) {\n                // the transliteration changes entirely when some special characters are added\n                if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\n                    diatricString += ch;\n                    ch = '';\n                } else if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + charMap[ch];\n                    diatricString = '';\n                } else {\n                    // process diactrics chars\n                    ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\n                }\n\n                lastCharWasSymbol = false;\n                lastCharWasDiatric = false;\n            } else if (ch in diatricMap) {\n                diatricString += ch;\n                ch = '';\n                // end of string, put the whole meaningful word\n                if (i === l - 1) {\n                    ch = diatricMap[diatricString];\n                }\n                lastCharWasDiatric = true;\n            } else if (\n                // process symbol chars\n                symbol[ch] && !(uricFlag && uricChars\n                    .indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars\n                    // .indexOf(ch) !== -1) && !(markFlag && markChars\n                    .indexOf(ch) !== -1)) {\n                ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\n                ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\n\n                lastCharWasSymbol = true;\n            } else {\n                if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + ch;\n                    diatricString = '';\n                    lastCharWasDiatric = false;\n                } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\n                    // process latin chars\n                    ch = ' ' + ch;\n                }\n                lastCharWasSymbol = false;\n            }\n\n            // add allowed chars\n            result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\n        }\n\n        if (titleCase) {\n            result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\n                var j = i.toUpperCase() + (r !== null ? r : '');\n                return (Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0) ? j : j.toLowerCase();\n            });\n        }\n\n        // eliminate duplicate separators\n        // add separator\n        // trim separators from start and end\n        result = result.replace(/\\s+/g, separator)\n            .replace(new RegExp('\\\\' + separator + '+', 'g'), separator)\n            .replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\n\n        if (truncate && result.length > truncate) {\n            lucky = result.charAt(truncate) === separator;\n            result = result.slice(0, truncate);\n\n            if (!lucky) {\n                result = result.slice(0, result.lastIndexOf(separator));\n            }\n        }\n\n        if (!maintainCase && !titleCase) {\n            result = result.toLowerCase();\n        }\n\n        return result;\n    };\n\n    /**\n     * createSlug curried(opts)(input)\n     * @param   {object|string} opts config object or input string\n     * @return  {Function} function getSlugWithConfig()\n     **/\n    var createSlug = function createSlug(opts) {\n\n        /**\n         * getSlugWithConfig\n         * @param   {string} input string\n         * @return  {string} slug string\n         */\n        return function getSlugWithConfig(input) {\n            return getSlug(input, opts);\n        };\n    };\n\n    /**\n     * escape Chars\n     * @param   {string} input string\n     */\n    var escapeChars = function escapeChars(input) {\n        return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n    };\n\n    /**\n     * check if the char is an already converted char from custom list\n     * @param   {char} ch character to check\n     * @param   {object} customReplacements custom translation map\n     */\n    var isReplacedCustomChar = function (ch, customReplacements) {\n        for (var c in customReplacements) {\n            if (customReplacements[c] === ch) {\n                return true;\n            }\n        }\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n\n        // export functions for use in Node\n        module.exports = getSlug;\n        module.exports.createSlug = createSlug;\n    } else if (typeof define !== 'undefined' && define.amd) {\n\n        // export function for use in AMD\n        define([], function () {\n            return getSlug;\n        });\n    } else {\n\n        // don't overwrite global if exists\n        try {\n            if (root.getSlug || root.createSlug) {\n                throw 'speakingurl: globals exists /(getSlug|createSlug)/';\n            } else {\n                root.getSlug = getSlug;\n                root.createSlug = createSlug;\n            }\n        } catch (e) {}\n    }\n})(this);","module.exports = require('./lib/speakingurl');\n","// @ts-ignore\nimport getSlug from 'speakingurl';\n\nconst requiredParams = [\n  'make',\n  'model',\n  'angle',\n  'filetype',\n  'compare',\n  'width',\n  'tailoring',\n  'dome',\n  'steering',\n  'modelyear',\n  'transmission',\n  'bodyvariant',\n  'bodysize',\n  'interior',\n  'trim',\n  'bodycolor',\n  'roofcolor',\n  'rimid',\n  'locality'\n];\n\nexport const cleanParameters = (parameters: object) => {\n  const params = JSON.parse(JSON.stringify(parameters)) || {};\n  Object.keys(params).forEach(key => {\n    if (requiredParams.indexOf(key) !== -1) {\n      params[key] = params[key] ? getSlug(params[key]) : 0;\n    }\n  });\n  return params;\n};\n\nexport const convertToArray = function(start: number, end: number) {\n  const result = [];\n  for (let i = start; i <= end; i++) {\n    result.push(i);\n  }\n  return result;\n};\n","const availableSizes = [150, 400, 800, 1200, 1600, 2600, 4096];\n\nexport const createURL = (\n  baseUrl: string,\n  params: any = <any>{},\n  angleOverride: string\n) => {\n  let carcloudFileType =\n    params.hasOwnProperty('filetype') && params.filetype != 0\n      ? params.filetype\n      : 'png';\n  if (carcloudFileType !== 'jpg' || carcloudFileType !== 'png') {\n    carcloudFileType = 'png';\n  }\n  const carcloudCompare =\n    params.hasOwnProperty('compare') && params.compare != 0\n      ? params.compare\n      : 'original';\n  let carcloudWidth = params.hasOwnProperty('width') ? params.width : 0;\n  if (!carcloudWidth) {\n    carcloudWidth = 1200;\n  }\n  if (carcloudWidth == 4000) {\n    carcloudWidth = 4096;\n  }\n  const carcloudTailoring =\n    params.hasOwnProperty('tailoring') && params.tailoring != 0\n      ? params.tailoring\n      : 'leaseplan';\n  const carcloudDome =\n    params.hasOwnProperty('dome') && params.dome != 0 ? params.dome : 'opq';\n  const carcloudSteering =\n    params.hasOwnProperty('steering') && params.steering != 0\n      ? params.steering\n      : 'lhd';\n  const carcloudMake = params.make;\n  const carcloudModel = params.model;\n  const carcloudModelYear = params.hasOwnProperty('modelyear')\n    ? params['modelyear']\n    : params.hasOwnProperty('year')\n    ? params['year']\n    : new Date().getFullYear();\n  const carcloudTransmission = params.hasOwnProperty('transmission')\n    ? params.transmission\n    : 0;\n  const carcloudVariant = params.hasOwnProperty('bodyvariant')\n    ? params['bodyvariant']\n    : 0;\n  let carcloudSize = params.hasOwnProperty('bodysize') ? params.bodysize : '';\n  if (!carcloudSize) {\n    carcloudSize = '';\n  }\n  const carcloudTrim = params.hasOwnProperty('trim') ? params.trim : 0;\n  const carcloudInterior = params.hasOwnProperty('interior')\n    ? params.interior\n    : 0;\n  const carcloudBodyColorId = params.hasOwnProperty('bodycolor')\n    ? params.bodycolor\n    : 0;\n  const carcloudRoofColorId = params.hasOwnProperty('roofcolor')\n    ? params.roofcolor\n    : 0;\n  const carcloudRimId = params.hasOwnProperty('rimid') ? params.rimid : 0;\n  let carcloudAngle =\n    typeof angleOverride !== 'undefined'\n      ? angleOverride\n      : params.hasOwnProperty('angle')\n      ? params.angle\n      : params.getexterior\n      ? '01'\n      : params.getinterior\n      ? '41'\n      : params.getrim\n      ? '51'\n      : '01';\n  if (!carcloudAngle) {\n    carcloudAngle = '01';\n  }\n  let carcloudLayers = '';\n  if (carcloudWidth === 'mstr') {\n    carcloudLayers = '-100-01';\n    carcloudFileType = 'png';\n  } else if (\n    isNaN(parseInt(carcloudWidth)) ||\n    availableSizes.indexOf(parseInt(carcloudWidth)) === -1\n  ) {\n    let widthToUse = Math.max.apply(null, availableSizes);\n    for (let i = 0; i < availableSizes.length; i++) {\n      if (\n        availableSizes[i] >= carcloudWidth &&\n        availableSizes[i] < widthToUse\n      ) {\n        widthToUse = availableSizes[i];\n      }\n    }\n    carcloudWidth = widthToUse;\n  }\n  return `${baseUrl}/${carcloudCompare}/${carcloudWidth}/${carcloudTailoring}/${carcloudDome}/${carcloudSteering}/${carcloudMake}/${carcloudModel}/${carcloudModelYear}/${carcloudTransmission}/${carcloudVariant}${carcloudSize}/${carcloudTrim}/${carcloudInterior}/${carcloudBodyColorId}/${carcloudRoofColorId}/${carcloudRimId}/${carcloudMake}-${carcloudModel}-${carcloudTrim}-${carcloudBodyColorId}-${carcloudRimId}-${carcloudAngle}${carcloudLayers}.${carcloudFileType}`;\n};\n","/**\n @module Base URL\n */\nlet baseUrlDefined = '';\n\n/**\n * Sets the baseUrl used by the API calls\n *\n * @method setBaseUrl\n * @category API\n * @param {string} baseUrl The full path to the base URL, e.g. `https://client.imagin.studio`\n * @example\n * import { setBaseUrl } from '@imagindeveloper/carcloudaccess';\n * setBaseUrl('https://client.imagin.studio');\n */\nexport const setBaseUrl = (baseUrl: string) => {\n  baseUrlDefined = baseUrl;\n};\n\n/**\n * Gets the previously set baseUrl\n *\n * @method getBaseUrl\n * @private\n * @category API\n * @returns {string} baseUrl\n */\nexport const getBaseUrl = () => {\n  return <string>baseUrlDefined;\n};\n","/**\n @module Image\n */\nimport { cleanParameters } from './helpers';\nimport { createURL } from './createURL';\nimport { getImageStatus } from './externalRequests';\nimport { getBaseUrl } from './baseUrl';\nimport { CarParameters, ImageResults } from './typeDefinitions';\n\n/**\n * Generates the full image URL\n *\n * @param {CarParameters} parameters The provided parameters\n * @param {string} angleOverride Optional angle override\n * @return {Promise<ImageResults>}\n *\n * @example\n * import { getImage } from '@imagindeveloper/carcloudaccess';\n * const { url } = await getImage({ make: 'Tesla', model: 'Model S', ... });\n */\nexport const getImage = (\n  parameters: CarParameters,\n  angleOverride: string = ''\n): Promise<ImageResults> => {\n  const baseUrl = getBaseUrl();\n  const params = cleanParameters(parameters);\n\n  // Nearmatch checking defaults to on\n  const { nearmatch = 1 } = params;\n  const imageURL = createURL(baseUrl, params, angleOverride);\n\n  if (parseInt(nearmatch, 10) === 0) {\n    // return getNearMatchingStatusForImage(imageURL);\n    return getImageStatus(imageURL, angleOverride, params);\n  }\n\n  return Promise.resolve({\n    url: imageURL\n  });\n};\n","import { ImageResults } from './typeDefinitions';\n\nexport const getNearMatchingStatusForImage = (imageURL: string) => {\n  return new Promise(resolve => {\n    const imageRequest = new XMLHttpRequest();\n    imageRequest.open('HEAD', `${imageURL}?${new Date().getTime()}`, true);\n    imageRequest.setRequestHeader('x-carcloudaccess-nearmatchresult', 'yes');\n    imageRequest.onreadystatechange = function() {\n      if (this.readyState === this.HEADERS_RECEIVED) {\n        let nearMatchingStatus =\n          parseInt(\n            <string>this.getResponseHeader('x-carcloudaccess-nearmatching')\n          ) || 0;\n        if (!nearMatchingStatus || isNaN(nearMatchingStatus)) {\n          nearMatchingStatus = 0;\n        }\n        resolve({\n          url: imageURL,\n          nearMatchingStatus\n        });\n      }\n    };\n    imageRequest.send();\n  });\n};\n\nexport const getImageStatus = (\n  imageURL: string,\n  angleOverride: string,\n  params: any = <any>{},\n  getMethod: string = 'getImage'\n): Promise<ImageResults> => {\n  return new Promise(resolve => {\n    const apiRequest = new XMLHttpRequest();\n    let carcloudFileType =\n      params.hasOwnProperty('filetype') && params.filetype != 0\n        ? params.filetype\n        : 'png';\n    if (carcloudFileType !== 'jpg' || carcloudFileType !== 'png') {\n      carcloudFileType = 'png';\n    }\n    let carcloudWidth = params.hasOwnProperty('width') ? params.width : 0;\n    if (!carcloudWidth) {\n      carcloudWidth = 1200;\n    }\n    let carcloudSize = params.hasOwnProperty('bodysize') ? params.bodysize : '';\n    if (!carcloudSize) {\n      carcloudSize = '';\n    }\n    let apiURL = 'https://carcloudaccess.imagin.studio/get-image-api';\n    apiURL += `?method=${getMethod}`;\n    apiURL += `&customer=${params.tailoring}&make=${params.make}&model=${params.model}`;\n    // This one is ridiculous, unmaintainable\n    apiURL += `&angle=${\n      typeof angleOverride !== 'undefined'\n        ? angleOverride\n        : params.hasOwnProperty('angle')\n        ? params.angle\n        : params.getexterior\n        ? '01'\n        : params.getinterior\n        ? '41'\n        : params.getrim\n        ? '51'\n        : '01'\n    }`;\n    apiURL += `&filetype=${carcloudFileType}`;\n    apiURL += `&compare=${\n      params.hasOwnProperty('compare') && params.compare != 0\n        ? params.compare\n        : 'original'\n    }`;\n    apiURL += `&width=${carcloudWidth}&tailoring=${params.tailoring}`;\n    apiURL += `&dome=${\n      params.hasOwnProperty('dome') && params.dome != 0 ? params.dome : 'opq'\n    }`;\n    apiURL += `&steering=${\n      params.hasOwnProperty('steering') && params.steering != 0\n        ? params.steering\n        : 'lhd'\n    }`;\n    apiURL += `&modelyear=${\n      params.hasOwnProperty('modelyear')\n        ? params.modelyear\n        : new Date().getFullYear()\n    }`;\n    apiURL += `&transmission=${\n      params.hasOwnProperty('transmission') ? params.transmission : 0\n    }`;\n    apiURL += `&bodyvariant=${\n      params.hasOwnProperty('bodyvariant') ? params.bodyvariant : 5\n    }`;\n    apiURL += `&bodysize${carcloudSize}`;\n    apiURL += `&interior=${\n      params.hasOwnProperty('interior') ? params.interior : 0\n    }`;\n    apiURL += `&trim=${params.hasOwnProperty('trim') ? params.trim : 0}`;\n    apiURL += `&bodycolor=${\n      params.hasOwnProperty('bodycolor') ? params.bodycolor : 0\n    }`;\n    apiURL += `&roofcolor=${\n      params.hasOwnProperty('roofcolor') ? params.roofcolor : 0\n    }`;\n    apiURL += `&rimid=${params.hasOwnProperty('rimid') ? params.rimid : 0}`;\n    apiURL += `&nearmatch=${\n      params.hasOwnProperty('nearmatch') ? params.nearmatch : 1\n    }`;\n    apiURL += `&fallback=${\n      params.hasOwnProperty('fallback') ? params.fallback : 1\n    }`;\n\n    apiRequest.open('POST', apiURL);\n    apiRequest.responseType = 'json';\n    apiRequest.onreadystatechange = function() {\n      if (apiRequest.readyState === 4) {\n        let resultData = '';\n        try {\n          const result = apiRequest.response.result;\n          if (typeof result[0] !== 'undefined') {\n            resultData = result[0];\n            if (imageURL === resultData) {\n              resultData = result[0];\n            }\n          }\n        } catch (e) {\n          //\n        }\n        resolve({\n          url: imageURL,\n          resultData\n        });\n      }\n    };\n    apiRequest.send(null);\n  });\n};\n","// @ts-ignore\nimport getSlug from 'speakingurl';\nimport { getImage } from './getImage';\n\nexport const autoloadImages = () => {\n  const carcloudaccessImages = document.querySelectorAll(\n    'img[data-carcloudaccess-make]'\n  );\n  if (carcloudaccessImages.length > 0) {\n    for (let i = 0; i < carcloudaccessImages.length; i++) {\n      const carcloudaccessImage = carcloudaccessImages[i];\n      // get all data-elememts\n      getImage(\n        {\n          make: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-make')\n          ),\n          model: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-model')\n          ),\n          angle: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-angle')\n          ),\n          filetype: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-filetype')\n          ),\n          compare: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-compare')\n          ),\n          width: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-width')\n          ),\n          tailoring: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-tailoring')\n          ),\n          dome: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-dome')\n          ),\n          steering: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-steering')\n          ),\n          modelyear: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-modelyear')\n          ),\n          transmission: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-transmission')\n          ),\n          bodyvariant: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-bodyvariant')\n          ),\n          bodysize: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-bodysize')\n          ),\n          interior: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-interior')\n          ),\n          trim: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-trim')\n          ),\n          bodycolor: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-bodycolor')\n          ),\n          roofcolor: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-roofcolor')\n          ),\n          rimid: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-rimid')\n          ),\n          locality: getSlug(\n            carcloudaccessImage.getAttribute('data-carcloudaccess-locality')\n          ),\n          nearmatch: carcloudaccessImage.getAttribute(\n            'data-carcloudaccess-nearmatch'\n          ),\n          fallback: carcloudaccessImage.getAttribute(\n            'data-carcloudaccess-fallback'\n          )\n        },\n        ''\n      ).then(results => {\n        // @ts-ignore\n        carcloudaccessImage.setAttribute('src', results.url);\n      });\n    }\n  }\n};\n","export const getCarPaintSwatches = (params: any = <any>{}) => {\n  const callback = params.hasOwnProperty('callback') ? params.callback : null;\n  const apiRequest = new XMLHttpRequest();\n  const apiURL = `https://swatch-request.imagin.studio/get-swatch-api?make=${params.make}&color=${params.color}`;\n  apiRequest.open('GET', apiURL, true);\n  apiRequest.responseType = 'json';\n  apiRequest.onreadystatechange = function() {\n    if (apiRequest.readyState === 4) {\n      let paints = '';\n      try {\n        if (typeof apiRequest.response !== 'undefined') {\n          paints = apiRequest.response;\n        }\n      } catch (e) {}\n\n      if (\n        callback &&\n        (typeof callback === 'function' ||\n          (typeof callback === 'string' &&\n            typeof window[callback] === 'function'))\n      ) {\n        if (\n          typeof callback === 'string' &&\n          typeof window[callback] === 'function'\n        ) {\n          window[callback](paints);\n        } else {\n          callback(paints);\n        }\n      } else if (params.hasOwnProperty('target')) {\n        // draw\n        let swatchhtml = '';\n        for (let i = 0; i < paints.length; i++) {\n          if (params.hasOwnProperty('target')) {\n            swatchhtml +=\n              '<div class=\"carcloudaccess-swatch-container\" onclick=\"' +\n              params.onclickcallback +\n              \"('\" +\n              paints[i][0] +\n              \"', '\" +\n              paints[i][1] +\n              '\\');\"' +\n              (params.hasOwnProperty('tooltip') && params.tooltip === true\n                ? ' title=\"' + paints[i][2] + '\"'\n                : '') +\n              '><div class=\"carcloudaccess-swatch\" style=\"background-image: linear-gradient( to bottom, ' +\n              paints[i][4] +\n              ',' +\n              paints[i][6] +\n              ')\"></div><div class=\"carcloudaccess-swatch\" style=\" background-image: linear-gradient( to bottom, ' +\n              paints[i][3] +\n              ',' +\n              paints[i][5] +\n              ')\"></div>';\n          } else {\n            swatchhtml +=\n              '<div class=\"carcloudaccess-swatch-container\"' +\n              (params.hasOwnProperty('tooltip') && params.tooltip === true\n                ? ' title=\"' + paints[i][2] + '\"'\n                : '') +\n              '><div class=\"carcloudaccess-swatch\" style=\"background-image: linear-gradient( to bottom, ' +\n              paints[i][4] +\n              ',' +\n              paints[i][6] +\n              ')\"></div><div class=\"carcloudaccess-swatch\" style=\" background-image: linear-gradient( to bottom, ' +\n              paints[i][3] +\n              ',' +\n              paints[i][5] +\n              ')\"></div>';\n          }\n          if (\n            paints[i][7] &&\n            paints[i][8] &&\n            paints[i][7].indexOf('#') !== -1\n          ) {\n            swatchhtml +=\n              '<div class=\"carcloudaccess-swatch-roof\" style=\"background-image: linear-gradient( to right, ' +\n              paints[i][7] +\n              ',' +\n              paints[i][8] +\n              ')\"></div>';\n          }\n          swatchhtml += '</div>';\n        }\n\n        const css = document.createElement('style');\n        css.type = 'text/css';\n        let styles = ':root { --carcloudaccessSwatchWidth: 70px;}';\n        styles +=\n          ' .carcloudaccess-swatch-container { display: inline-block; position: relative; width: var(--carcloudaccessSwatchWidth); height: calc(var(--carcloudaccessSwatchWidth)); clip-path: circle(45% at center); }';\n        styles +=\n          ' .carcloudaccess-swatch { --swatchWidth: 70px;  width: var(--carcloudaccessSwatchWidth); height: calc(var(--carcloudaccessSwatchWidth) / 2); }';\n        styles +=\n          ' .carcloudaccess-swatch-roof { position: absolute; top:0px; left: 66%;\theight: calc(var(--carcloudaccessSwatchWidth)); width: 33%; }\t';\n        // @ts-ignore\n        if (css.styleSheet) css.styleSheet.cssText = styles;\n        else css.appendChild(document.createTextNode(styles));\n        document.getElementsByTagName('head')[0].appendChild(css);\n\n        params.target.innerHTML = swatchhtml;\n      }\n    }\n  };\n  apiRequest.send(null);\n};\n","import { getImage } from './getImage';\n\nexport const getInteriorImage = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = true;\n  params.getrim = false;\n  params.getthumb = false;\n  return getImage(params);\n};\n\nexport const getInteriorThumb = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = true;\n  params.getrim = false;\n  params.getthumb = true;\n  return getImage(params);\n};\n\nexport const getExteriorImage = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = true;\n  params.getinterior = false;\n  params.getrim = false;\n  params.getthumb = false;\n  return getImage(params);\n};\n\nexport const getRimImage = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = false;\n  params.getrim = true;\n  params.getthumb = false;\n  return getImage(params);\n};\n\nexport const getRimThumb = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = false;\n  params.getrim = true;\n  params.getthumb = true;\n  return getImage(params);\n};\n","import { cleanParameters, convertToArray } from './helpers';\nimport { getImage } from './getImage';\n\nconst defaultAngles = {\n  all: [1, 5, 9, 13, 17, 21, 23, 25, 29, 51],\n  exterior: [1, 5, 9, 13, 17, 21, 23, 25, 29, 51],\n  interior: [41, 42, 43],\n  interiorThumb: [40],\n  rim: convertToArray(55, 59),\n  rimThumb: [50]\n};\nconst defaultCarCloudAccessAngles = {\n  all: [1, 5, 9, 13, 17, 21, 23, 25, 29, 51],\n  exterior: [1, 5, 9, 13, 17, 21, 23, 25, 29, 51],\n  interior: convertToArray(41, 49),\n  interiorThumb: [40],\n  rim: convertToArray(55, 59),\n  rimThumb: [50]\n};\n\nexport const getListOfImages = (parameters: any = <any>{}) => {\n  const params = cleanParameters(parameters);\n\n  return new Promise(resolve => {\n    let type = 'all';\n    if (params.hasOwnProperty('getexterior') && params.getexterior === true) {\n      type = 'exterior';\n    } else if (\n      params.hasOwnProperty('getinterior') &&\n      params.getinterior === true\n    ) {\n      type =\n        params.hasOwnProperty('getthumb') && params.getthumb === true\n          ? 'interiorThumb'\n          : 'interior';\n    } else if (params.hasOwnProperty('getrim') && params.getrim === true) {\n      type =\n        params.hasOwnProperty('getthumb') && params.getthumb === true\n          ? 'rimThumb'\n          : 'rim';\n    }\n\n    const getImageCalls: any[] = [];\n    const anglesToUse =\n      params.hasOwnProperty('defaultangles') && params.defaultangles === true\n        ? defaultCarCloudAccessAngles[type]\n        : defaultAngles[type];\n    // @ts-ignore\n    anglesToUse.forEach(angle => {\n      if (angle < 10) {\n        angle = `0${angle}`;\n      }\n      getImageCalls.push(getImage(params, angle));\n    });\n    Promise.all(getImageCalls).then(values => {\n      resolve(values);\n    });\n  });\n};\n","import { getListOfImages } from './getListOfImages';\n\nexport const getListOfInteriorImages = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = true;\n  params.getrim = false;\n  params.getthumb = false;\n  return getListOfImages(params);\n};\n\nexport const getListOfInteriorThumbs = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = true;\n  params.getrim = false;\n  params.getthumb = true;\n  return getListOfImages(params);\n};\n\nexport const getListOfExteriorImages = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = true;\n  params.getinterior = false;\n  params.getrim = false;\n  params.getthumb = false;\n  return getListOfImages(params);\n};\n\nexport const getListOfRimImages = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = false;\n  params.getrim = true;\n  params.getthumb = false;\n  return getListOfImages(params);\n};\n\nexport const getListOfRimThumbs = (parameters: any = <any>{}) => {\n  const params = parameters || {};\n  params.getexterior = false;\n  params.getinterior = false;\n  params.getrim = true;\n  params.getthumb = true;\n  return getListOfImages(params);\n};\n"],"names":["root","charMap","À","Á","Â","Ã","Ä","Å","Æ","Ç","È","É","Ê","Ë","Ì","Í","Î","Ï","Ð","Ñ","Ò","Ó","Ô","Õ","Ö","Ő","Ø","Ù","Ú","Û","Ü","Ű","Ý","Þ","ß","à","á","â","ã","ä","å","æ","ç","è","é","ê","ë","ì","í","î","ï","ð","ñ","ò","ó","ô","õ","ö","ő","ø","ù","ú","û","ü","ű","ý","þ","ÿ","ẞ","ا","أ","إ","آ","ؤ","ئ","ء","ب","ت","ث","ج","ح","خ","د","ذ","ر","ز","س","ش","ص","ض","ط","ظ","ع","غ","ف","ق","ك","ل","م","ن","ه","و","ي","ى","ة","ﻻ","ﻷ","ﻹ","ﻵ","گ","چ","پ","ژ","ک","ی","َ","ً","ِ","ٍ","ُ","ٌ","ْ","٠","١","٢","٣","٤","٥","٦","٧","٨","٩","۰","۱","۲","۳","۴","۵","۶","۷","۸","۹","က","ခ","ဂ","ဃ","င","စ","ဆ","ဇ","စျ","ည","ဋ","ဌ","ဍ","ဎ","ဏ","တ","ထ","ဒ","ဓ","န","ပ","ဖ","ဗ","ဘ","မ","ယ","ရ","လ","ဝ","သ","ဟ","ဠ","အ","ြ","ျ","ွ","ြွ","ျွ","ှ","ဧ","၏","ဣ","ဤ","ဉ","ဦ","ဩ","သြော","ဪ","၀","၁","၂","၃","၄","၅","၆","၇","၈","၉","္","့","း","č","ď","ě","ň","ř","š","ť","ů","ž","Č","Ď","Ě","Ň","Ř","Š","Ť","Ů","Ž","ހ","ށ","ނ","ރ","ބ","ޅ","ކ","އ","ވ","މ","ފ","ދ","ތ","ލ","ގ","ޏ","ސ","ޑ","ޒ","ޓ","ޔ","ޕ","ޖ","ޗ","ޘ","ޙ","ޚ","ޛ","ޜ","ޝ","ޞ","ޟ","ޠ","ޡ","ޢ","ޣ","ޤ","ޥ","ަ","ާ","ި","ީ","ު","ޫ","ެ","ޭ","ޮ","ޯ","ް","ა","ბ","გ","დ","ე","ვ","ზ","თ","ი","კ","ლ","მ","ნ","ო","პ","ჟ","რ","ს","ტ","უ","ფ","ქ","ღ","ყ","შ","ჩ","ც","ძ","წ","ჭ","ხ","ჯ","ჰ","α","β","γ","δ","ε","ζ","η","θ","ι","κ","λ","μ","ν","ξ","ο","π","ρ","σ","τ","υ","φ","χ","ψ","ω","ά","έ","ί","ό","ύ","ή","ώ","ς","ϊ","ΰ","ϋ","ΐ","Α","Β","Γ","Δ","Ε","Ζ","Η","Θ","Ι","Κ","Λ","Μ","Ν","Ξ","Ο","Π","Ρ","Σ","Τ","Υ","Φ","Χ","Ψ","Ω","Ά","Έ","Ί","Ό","Ύ","Ή","Ώ","Ϊ","Ϋ","ā","ē","ģ","ī","ķ","ļ","ņ","ū","Ā","Ē","Ģ","Ī","Ķ","Ļ","Ņ","Ū","Ќ","ќ","Љ","љ","Њ","њ","Тс","тс","ą","ć","ę","ł","ń","ś","ź","ż","Ą","Ć","Ę","Ł","Ń","Ś","Ź","Ż","Є","І","Ї","Ґ","є","і","ї","ґ","ă","Ă","ș","Ș","ț","Ț","ţ","Ţ","а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","ђ","ј","ћ","џ","Ђ","Ј","Ћ","Џ","ľ","ĺ","ŕ","Ľ","Ĺ","Ŕ","ş","Ş","ı","İ","ğ","Ğ","ả","Ả","ẳ","Ẳ","ẩ","Ẩ","đ","Đ","ẹ","Ẹ","ẽ","Ẽ","ẻ","Ẻ","ế","Ế","ề","Ề","ệ","Ệ","ễ","Ễ","ể","Ể","ỏ","ọ","Ọ","ố","Ố","ồ","Ồ","ổ","Ổ","ộ","Ộ","ỗ","Ỗ","ơ","Ơ","ớ","Ớ","ờ","Ờ","ợ","Ợ","ỡ","Ỡ","Ở","ở","ị","Ị","ĩ","Ĩ","ỉ","Ỉ","ủ","Ủ","ụ","Ụ","ũ","Ũ","ư","Ư","ứ","Ứ","ừ","Ừ","ự","Ự","ữ","Ữ","ử","Ử","ỷ","Ỷ","ỳ","Ỳ","ỵ","Ỵ","ỹ","Ỹ","ạ","Ạ","ấ","Ấ","ầ","Ầ","ậ","Ậ","ẫ","Ẫ","ắ","Ắ","ằ","Ằ","ặ","Ặ","ẵ","Ẵ","⓪","①","②","③","④","⑤","⑥","⑦","⑧","⑨","⑩","⑪","⑫","⑬","⑭","⑮","⑯","⑰","⑱","⑲","⑳","⓵","⓶","⓷","⓸","⓹","⓺","⓻","⓼","⓽","⓾","⓿","⓫","⓬","⓭","⓮","⓯","⓰","⓱","⓲","⓳","⓴","Ⓐ","Ⓑ","Ⓒ","Ⓓ","Ⓔ","Ⓕ","Ⓖ","Ⓗ","Ⓘ","Ⓙ","Ⓚ","Ⓛ","Ⓜ","Ⓝ","Ⓞ","Ⓟ","Ⓠ","Ⓡ","Ⓢ","Ⓣ","Ⓤ","Ⓥ","Ⓦ","Ⓧ","Ⓨ","Ⓩ","ⓐ","ⓑ","ⓒ","ⓓ","ⓔ","ⓕ","ⓖ","ⓗ","ⓘ","ⓙ","ⓚ","ⓛ","ⓜ","ⓝ","ⓞ","ⓟ","ⓠ","ⓡ","ⓢ","ⓣ","ⓤ","ⓦ","ⓥ","ⓧ","ⓨ","ⓩ","“","”","‘","’","∂","ƒ","™","©","œ","Œ","®","†","℠","…","˚","º","ª","•","၊","။","$","€","₢","₣","£","₤","₦","₧","₩","₪","₫","₭","₮","₯","₱","₲","₳","₴","₵","¢","¥","元","円","﷼","₠","฿","₨","₹","₰","₺","؋","₼","лв","៛","₡","₸","ден","zł","₽","₾","lookAheadCharArray","diatricMap","ာ","ါ","ေ","ဲ","ိ","ီ","ို","ု","ူ","ေါင်","ော","ော်","ေါ","ေါ်","်","က်","ိုက်","ောက်","င်","ိုင်","ောင်","စ်","ည်","တ်","ိတ်","ုတ်","ွတ်","ေတ်","ဒ်","ိုဒ်","ုဒ်","န်","ာန်","ိန်","ုန်","ွန်","ပ်","ိပ်","ုပ်","ွပ်","န်ုပ်","မ်","ိမ်","ုမ်","ွမ်","ယ်","ိုလ်","ဉ်","ံ","ိံ","ုံ","ައް","ަށް","langCharMap","en","az","ə","Ə","cs","fi","hu","lt","ė","į","ų","Ė","Į","Ų","lv","pl","sv","sk","sr","tr","symbolMap","ar","∆","∞","♥","&","|","<",">","∑","¤","ca","de","dv","es","fa","fr","ge","gr","it","my","mk","nl","pt","ro","ru","uk","vn","uricChars","join","uricNoSlashChars","markChars","getSlug","input","opts","maintainCase","titleCase","truncate","uricFlag","uricNoSlashFlag","markFlag","symbol","langChar","lucky","i","ch","l","lastCharWasSymbol","lastCharWasDiatric","separator","result","diatricString","convertSymbols","customReplacements","allowedChars","custom","uric","uricNoSlash","mark","symbols","lang","length","Array","prototype","toString","call","forEach","v","Object","keys","r","RegExp","escapeChars","replace","isReplacedCustomChar","match","indexOf","test","substr","_","j","toUpperCase","toLowerCase","charAt","slice","lastIndexOf","createSlug","c","module","exports","e","this","require$$0","requiredParams","cleanParameters","parameters","params","JSON","parse","stringify","key","convertToArray","start","end","push","availableSizes","baseUrlDefined","setBaseUrl","baseUrl","getBaseUrl","getImage","angleOverride","_a","nearmatch","imageURL","carcloudFileType","hasOwnProperty","filetype","carcloudCompare","compare","carcloudWidth","width","carcloudTailoring","tailoring","carcloudDome","dome","carcloudSteering","steering","carcloudMake","make","carcloudModel","model","carcloudModelYear","Date","getFullYear","carcloudTransmission","transmission","carcloudVariant","carcloudSize","bodysize","carcloudTrim","trim","carcloudInterior","interior","carcloudBodyColorId","bodycolor","carcloudRoofColorId","roofcolor","carcloudRimId","rimid","carcloudAngle","angle","getexterior","getinterior","getrim","carcloudLayers","isNaN","parseInt","widthToUse","Math","max","apply","createURL","getMethod","Promise","resolve","apiRequest","XMLHttpRequest","apiURL","modelyear","bodyvariant","fallback","open","responseType","onreadystatechange","readyState","resultData","response","url","send","getImageStatus","autoloadImages","carcloudaccessImages","document","querySelectorAll","carcloudaccessImage","getAttribute","locality","then","results","setAttribute","getCarPaintSwatches","callback","color","paints","window","swatchhtml","onclickcallback","tooltip","css","createElement","type","styles","styleSheet","cssText","appendChild","createTextNode","getElementsByTagName","target","innerHTML","getInteriorImage","getthumb","getInteriorThumb","getExteriorImage","getRimImage","getRimThumb","defaultAngles","all","exterior","interiorThumb","rim","rimThumb","defaultCarCloudAccessAngles","getListOfImages","getImageCalls","defaultangles","values","getListOfInteriorImages","getListOfInteriorThumbs","getListOfExteriorImages","getListOfRimImages","getListOfRimThumbs"],"mappings":"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AAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,GAILC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAGLC,IAAK,IAELC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAELC,IAAK,IAELC,IAAK,IAELC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAELC,IAAK,IAILC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,KAAM,KACNC,KAAM,KAGNC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAELC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAGLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAKLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,GACLC,IAAK,IACLC,IAAK,GACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,GACLC,IAAK,IACLC,IAAK,GACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KAGLC,IAAK,KACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,KAGLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAOLC,IAAK,IACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IAGLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KAELC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KAELC,IAAK,IACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,KACLC,IAAK,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"}